plugins {
    alias(libs.plugins.fabric.loom) apply false
    alias(libs.plugins.neoforge.moddev) apply false
}

def copyShadowJar = it -> {
    it.include('*-all.jar', '*-javadoc.jar', '*-sources.jar')
    it.rename { String fileName ->
        fileName.replace('-all', '')
    }
}

tasks.register('buildAll', Copy) {
    dependsOn(':bukkit:shadowJar', ':velocity:shadowJar', ':bungeecord:shadowJar',
            ':forge:jarJar', ':fabric:build', ':neoforge:build')

    from('fabric/build/libs', 'neoforge/build/libs')
    from('bukkit/build/libs', copyShadowJar)
    from('bungeecord/build/libs', copyShadowJar)
    from('velocity/build/libs', copyShadowJar)
    from('forge/build/libs', copyShadowJar)

    it.rename { String fileName ->
        fileName.replace(mod_name, mod_id)
    }

    into('result')
}

tasks.register('clean', Delete) {
    delete 'result'
}
