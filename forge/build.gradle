import com.modrinth.minotaur.TaskModrinthUpload
import net.darkhax.curseforgegradle.TaskPublishCurseForge

plugins {
    id 'multiloader-loader'
    alias(libs.plugins.forge.gradle)
    alias(libs.plugins.minotaur)
    alias(libs.plugins.curseforge.gradle)
}

base {
    archivesName = "${mod_name}-forge-${minecraft_version}"
}

minecraft {
    mappings channel: 'official', version: minecraft_version

    copyIdeResources = true //Calls processResources when in dev

    reobf = false // Forge 1.20.6+ uses official mappings at runtime, so we shouldn't reobf from official to SRG

    // Automatically enable forge AccessTransformers if the file exists
    // This location is hardcoded in Forge and can not be changed.
    // https://github.com/MinecraftForge/MinecraftForge/blob/be1698bb1554f9c8fa2f58e32b9ab70bc4385e60/fmlloader/src/main/java/net/minecraftforge/fml/loading/moddiscovery/ModFile.java#L123
    // Forge still uses SRG names during compile time, so we cannot use the common-mc AT's
    def at = file('src/main/resources/META-INF/accesstransformer.cfg')
    if (at.exists()) {
        accessTransformer = at
    }

    runs {
        configureEach {
            ideaModule "${rootProject.name}.${project.name}.main"

            property 'eventbus.api.strictRuntimeChecks', 'true'
        }

        client {
            workingDirectory file('runs/client')
            taskName 'Client'
            mods {
                modClientRun {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory file('runs/server')
            taskName 'Server'
            mods {
                modServerRun {
                    source sourceSets.main
                }
            }
            args '--nogui'
        }
    }
}

sourceSets.main.resources.srcDir 'src/generated/resources'

jarJar.enable()

tasks.named('jarJar') {
    dependsOn("javadocJar", "sourcesJar")
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
    annotationProcessor 'net.minecraftforge:eventbus-validator:7.0-beta.7'

    // Forge's hack fix
    implementation('net.sf.jopt-simple:jopt-simple:5.0.4') { version { strictly '5.0.4' } }

    implementation(libs.mclogs.api)
    jarJar(libs.mclogs.api)
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            fg.component(it)
        }
    }
}

sourceSets.each {
    def dir = layout.buildDirectory.dir("sourcesSets/$it.name")
    it.output.resourcesDir = dir
    it.java.destinationDirectory = dir
}

modrinth {
    token = findProperty('modrinth_api_token') as String ?: ''
    projectId = modrinth_project_id
    uploadFile = tasks.jarJar.archiveFile
    gameVersions = minecraft_version_list
    loaders = ["forge"]
    changelog = rootProject.changelog
}

tasks.withType(TaskModrinthUpload).configureEach {
    dependsOn('jarJar')
}

tasks.register('curseforge', TaskPublishCurseForge) {
    apiToken = findProperty('curseforge_token') as String ?: ''
    def mainFile = upload(curseforge_project_id_mod, tasks.jarJar.archiveFile)
    mainFile.releaseType = "release"
    mainFile.changelog = changelog
    mainFile.changelogType = "markdown"

    for (String version in minecraft_version_list) {
        mainFile.addGameVersion(version)
    }
}
