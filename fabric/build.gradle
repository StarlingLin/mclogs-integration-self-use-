import net.darkhax.curseforgegradle.TaskPublishCurseForge

plugins {
    id 'multiloader-loader'
    alias(libs.plugins.fabric.loom)
    alias(libs.plugins.minotaur)
    alias(libs.plugins.curseforge.gradle)
}

dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings loom.layered {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-${parchment_minecraft}:${parchment_version}@zip")
    }
    modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"

    implementation(libs.mclogs.api)
    include(libs.mclogs.api)
    implementation(libs.nightconfig.toml)
    include(libs.nightconfig.toml)
}

loom {
    def aw = project(':common-mc').file("src/main/resources/${mod_id}.accesswidener")
    if (aw.exists()) {
        accessWidenerPath.set(aw)
    }
    runs {
        client {
            client()
            setConfigName('Fabric Client')
            ideConfigGenerated(true)
            runDir('runs/client')
        }
        server {
            server()
            setConfigName('Fabric Server')
            ideConfigGenerated(true)
            runDir('runs/server')
        }
    }
}

modrinth {
    token = findProperty('modrinth_api_token') as String ?: ''
    projectId = modrinth_project_id
    uploadFile = remapJar
    gameVersions = minecraft_version_list
    loaders = ["fabric"]
    changelog = rootProject.changelog
    dependencies {
        required.project "fabric-api"
    }
}

tasks.register('curseforge', TaskPublishCurseForge) {
    apiToken = findProperty('curseforge_token') as String ?: ''
    def mainFile = upload(curseforge_project_id_mod, jar)
    mainFile.releaseType = "release"
    mainFile.changelog = changelog
    mainFile.changelogType = "markdown"
    mainFile.addRequirement("fabric-api")

    for (String version in minecraft_version_list) {
        mainFile.addGameVersion(version)
    }
}
